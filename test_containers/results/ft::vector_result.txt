

--------------------------------
------	TESTING VECTOR 1 ------
--------------------------------
		VECTOR TYPE: char

test 1:	operator[]: c c c c c c c c c c c c 
test 2:	size: 12
test 3:	capacity: 12
test 4:	empty: 0
test 5:	iterators: c c c c c c c c c c c c 
test 6:	at: c c c c c c c c c c c c vector
test 7:	front: c
test 8:	back: c
test 9:	push_back: new elem = c
test 10:	pop_back: new elem = c
test 11:	swap: size of tmp = 13 and size of vec = 12
			size of tmp = 12 and size of vec = 13
test 12:	resize: size of tmp = 13
			new elem = c			size of tmp after resize = 3
test 13:	assign1: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 14:	assign2: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 15:	insert1: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 16
test 16:	insert2: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 28
test 17:	clear: size before clear: 13 | size after clear: 0new elem pushed after clear: c

--------------------------------
------	TESTING VECTOR 2 ------
--------------------------------
		VECTOR TYPE: char

test 18:	operator[]: c c c c c c c c c c c c 
test 19:	size: 12
test 20:	capacity: 12
test 21:	empty: 0
test 22:	iterators: c c c c c c c c c c c c 
test 23:	at: c c c c c c c c c c c c vector
test 24:	front: c
test 25:	back: c
test 26:	push_back: new elem = c
test 27:	pop_back: new elem = c
test 28:	swap: size of tmp = 13 and size of vec = 12
			size of tmp = 12 and size of vec = 13
test 29:	resize: size of tmp = 13
			new elem = c			size of tmp after resize = 3
test 30:	assign1: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 31:	assign2: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 32:	insert1: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 16
test 33:	insert2: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 28
test 34:	clear: size before clear: 13 | size after clear: 0new elem pushed after clear: c

--------------------------------
------	TESTING VECTOR 3 ------
--------------------------------
		VECTOR TYPE: char

test 35:	operator[]: a 
test 36:	size: 1
test 37:	capacity: 1
test 38:	empty: 0
test 39:	iterators: a 
test 40:	at: a vector
test 41:	front: a
test 42:	back: a
test 43:	push_back: new elem = a
test 44:	pop_back: new elem = a
test 45:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 46:	resize: size of tmp = 2
			new elem = a			size of tmp after resize = 3
test 47:	assign1: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 48:	assign2: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 49:	insert1: size of tmp = 2
			a | a | a | a | a | 
			size of tmp = 5
test 50:	insert2: size of tmp = 2
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 17
test 51:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: a

--------------------------------
------	TESTING VECTOR 4 ------
--------------------------------
		VECTOR TYPE: char

test 52:	operator[]: a 
test 53:	size: 1
test 54:	capacity: 1
test 55:	empty: 0
test 56:	iterators: a 
test 57:	at: a vector
test 58:	front: a
test 59:	back: a
test 60:	push_back: new elem = a
test 61:	pop_back: new elem = a
test 62:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 63:	resize: size of tmp = 2
			new elem = a			size of tmp after resize = 3
test 64:	assign1: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 65:	assign2: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 66:	insert1: size of tmp = 2
			a | a | a | a | a | 
			size of tmp = 5
test 67:	insert2: size of tmp = 2
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 17
test 68:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: a

--------------------------------
------	TESTING VECTOR 5 ------
--------------------------------
		VECTOR TYPE: int

test 69:	operator[]: 100 100 100 100 100 
test 70:	size: 5
test 71:	capacity: 5
test 72:	empty: 0
test 73:	iterators: 100 100 100 100 100 
test 74:	at: 100 100 100 100 100 vector
test 75:	front: 100
test 76:	back: 100
test 77:	push_back: new elem = 100
test 78:	pop_back: new elem = 100
test 79:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 80:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 81:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 82:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 83:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 84:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 85:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 6 ------
--------------------------------
		VECTOR TYPE: int

test 86:	operator[]: 
test 87:	size: 0
test 88:	capacity: 0
test 89:	empty: 1
test 90:	iterators: 
test 91:	at: vector
test 92:	front: 
test 93:	back: 
test 94:	push_back: new elem = 0
test 95:	pop_back: 
test 96:	swap: size of tmp = 1 and size of vec = 0
			size of tmp = 0 and size of vec = 1
test 97:	resize: size of tmp = 1
			new elem = 0			size of tmp after resize = 3
test 98:	assign1: size of tmp = 1
			new elem = 0			size after assign = 3and content is:
			0 | 0 | 0 | 
test 99:	assign2: size of tmp = 1
			new elem = 0			size after assign = 3and content is:
			0 | 0 | 0 | 
test 100:	insert1: size of tmp = 1
			0 | 0 | 0 | 0 | 
			size of tmp = 4
test 101:	insert2: size of tmp = 1
			0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 
			size of tmp = 16
test 102:	clear: size before clear: 1 | size after clear: 0new elem pushed after clear: 0

--------------------------------
------	TESTING VECTOR 7 ------
--------------------------------
		VECTOR TYPE: int

test 103:	operator[]: 89123891 
test 104:	size: 1
test 105:	capacity: 1
test 106:	empty: 0
test 107:	iterators: 89123891 
test 108:	at: 89123891 vector
test 109:	front: 89123891
test 110:	back: 89123891
test 111:	push_back: new elem = 89123891
test 112:	pop_back: new elem = 89123891
test 113:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 114:	resize: size of tmp = 2
			new elem = 89123891			size of tmp after resize = 3
test 115:	assign1: size of tmp = 2
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
test 116:	assign2: size of tmp = 2
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
test 117:	insert1: size of tmp = 2
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 5
test 118:	insert2: size of tmp = 2
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 17
test 119:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 89123891

--------------------------------
------	TESTING VECTOR 8 ------
--------------------------------
		VECTOR TYPE: int

test 120:	operator[]: 100 100 100 100 100 
test 121:	size: 5
test 122:	capacity: 5
test 123:	empty: 0
test 124:	iterators: 100 100 100 100 100 
test 125:	at: 100 100 100 100 100 vector
test 126:	front: 100
test 127:	back: 100
test 128:	push_back: new elem = 100
test 129:	pop_back: new elem = 100
test 130:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 131:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 132:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 133:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 134:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 135:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 136:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 9 ------
--------------------------------
		VECTOR TYPE: int

test 137:	operator[]: 100 100 100 100 100 
test 138:	size: 5
test 139:	capacity: 5
test 140:	empty: 0
test 141:	iterators: 100 100 100 100 100 
test 142:	at: 100 100 100 100 100 vector
test 143:	front: 100
test 144:	back: 100
test 145:	push_back: new elem = 100
test 146:	pop_back: new elem = 100
test 147:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 148:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 149:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 150:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 151:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 152:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 153:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 10 ------
--------------------------------
		VECTOR TYPE: double*

test 154:	operator[]: 
test 155:	size: 0
test 156:	capacity: 0
test 157:	empty: 1
test 158:	iterators: 
test 159:	at: vector
test 160:	front: 
test 161:	back: 
test 162:	push_back: new elem = 0x0
test 163:	pop_back: 
test 164:	swap: size of tmp = 1 and size of vec = 0
			size of tmp = 0 and size of vec = 1
test 165:	resize: size of tmp = 1
			new elem = 0x0			size of tmp after resize = 3
test 166:	assign1: size of tmp = 1
			new elem = 0x0			size after assign = 3and content is:
			0x0 | 0x0 | 0x0 | 
test 167:	assign2: size of tmp = 1
			new elem = 0x0			size after assign = 3and content is:
			0x0 | 0x0 | 0x0 | 
test 168:	insert1: size of tmp = 1
			0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 4
test 169:	insert2: size of tmp = 1
			0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 16
test 170:	clear: size before clear: 1 | size after clear: 0new elem pushed after clear: 0x0

--------------------------------
------	TESTING VECTOR 11 ------
--------------------------------
		VECTOR TYPE: double*

test 171:	operator[]: 0x7ffeea0abb40 
test 172:	size: 1
test 173:	capacity: 1
test 174:	empty: 0
test 175:	iterators: 0x7ffeea0abb40 
test 176:	at: 0x7ffeea0abb40 vector
test 177:	front: 0x7ffeea0abb40
test 178:	back: 0x7ffeea0abb40
test 179:	push_back: new elem = 0x7ffeea0abb40
test 180:	pop_back: new elem = 0x7ffeea0abb40
test 181:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 182:	resize: size of tmp = 2
			new elem = 0x7ffeea0abb40			size of tmp after resize = 3
test 183:	assign1: size of tmp = 2
			new elem = 0x7ffeea0abb40			size after assign = 3and content is:
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
test 184:	assign2: size of tmp = 2
			new elem = 0x7ffeea0abb40			size after assign = 3and content is:
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
test 185:	insert1: size of tmp = 2
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
			size of tmp = 5
test 186:	insert2: size of tmp = 2
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
			size of tmp = 17
test 187:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 0x7ffeea0abb40

--------------------------------
------	TESTING VECTOR 12 ------
--------------------------------
		VECTOR TYPE: double*

test 188:	operator[]: 0x7ffeea0abb40 
test 189:	size: 1
test 190:	capacity: 1
test 191:	empty: 0
test 192:	iterators: 0x7ffeea0abb40 
test 193:	at: 0x7ffeea0abb40 vector
test 194:	front: 0x7ffeea0abb40
test 195:	back: 0x7ffeea0abb40
test 196:	push_back: new elem = 0x7ffeea0abb40
test 197:	pop_back: new elem = 0x7ffeea0abb40
test 198:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 199:	resize: size of tmp = 2
			new elem = 0x7ffeea0abb40			size of tmp after resize = 3
test 200:	assign1: size of tmp = 2
			new elem = 0x7ffeea0abb40			size after assign = 3and content is:
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
test 201:	assign2: size of tmp = 2
			new elem = 0x7ffeea0abb40			size after assign = 3and content is:
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
test 202:	insert1: size of tmp = 2
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
			size of tmp = 5
test 203:	insert2: size of tmp = 2
			0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 0x7ffeea0abb40 | 
			size of tmp = 17
test 204:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 0x7ffeea0abb40

--------------------------------
------	TESTING VECTOR 13 ------
--------------------------------
		VECTOR TYPE: std::string

test 205:	operator[]: salut salut salut salut salut salut 
test 206:	size: 6
test 207:	capacity: 6
test 208:	empty: 0
test 209:	iterators: salut salut salut salut salut salut 
test 210:	at: salut salut salut salut salut salut vector
test 211:	front: salut
test 212:	back: salut
test 213:	push_back: new elem = salut
test 214:	pop_back: new elem = salut
test 215:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 216:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 217:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 218:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 219:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 220:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 221:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 14 ------
--------------------------------
		VECTOR TYPE: std::string

test 222:	operator[]: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj 
test 223:	size: 6
test 224:	capacity: 6
test 225:	empty: 0
test 226:	iterators: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj 
test 227:	at: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj vector
test 228:	front: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
test 229:	back: jbhkfbhsj
test 230:	push_back: new elem = jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
test 231:	pop_back: new elem = jbhkfbhsj
test 232:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 233:	resize: size of tmp = 7
			new elem = jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf			size of tmp after resize = 3
test 234:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | 
test 235:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
test 236:	insert1: size of tmp = 7
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 10
test 237:	insert2: size of tmp = 7
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 22
test 238:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf

--------------------------------
------	TESTING VECTOR 15 ------
--------------------------------
		VECTOR TYPE: std::string

test 239:	operator[]:     
test 240:	size: 4
test 241:	capacity: 4
test 242:	empty: 0
test 243:	iterators:     
test 244:	at:     vector
test 245:	front: 
test 246:	back: 
test 247:	push_back: new elem = 
test 248:	pop_back: new elem = 
test 249:	swap: size of tmp = 5 and size of vec = 4
			size of tmp = 4 and size of vec = 5
test 250:	resize: size of tmp = 5
			new elem = 			size of tmp after resize = 3
test 251:	assign1: size of tmp = 5
			new elem = 			size after assign = 3and content is:
			 |  |  | 
test 252:	assign2: size of tmp = 5
			new elem = 			size after assign = 3and content is:
			 |  |  | 
test 253:	insert1: size of tmp = 5
			 |  |  |  |  |  |  |  | 
			size of tmp = 8
test 254:	insert2: size of tmp = 5
			 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | 
			size of tmp = 20
test 255:	clear: size before clear: 5 | size after clear: 0new elem pushed after clear: 

--------------------------------
------	TESTING VECTOR 16 ------
--------------------------------
		VECTOR TYPE: std::string

test 256:	operator[]: salut salut salut salut salut salut 
test 257:	size: 6
test 258:	capacity: 6
test 259:	empty: 0
test 260:	iterators: salut salut salut salut salut salut 
test 261:	at: salut salut salut salut salut salut vector
test 262:	front: salut
test 263:	back: salut
test 264:	push_back: new elem = salut
test 265:	pop_back: new elem = salut
test 266:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 267:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 268:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 269:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 270:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 271:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 272:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 17 ------
--------------------------------
		VECTOR TYPE: std::string

test 273:	operator[]: salut salut salut salut salut salut 
test 274:	size: 6
test 275:	capacity: 6
test 276:	empty: 0
test 277:	iterators: salut salut salut salut salut salut 
test 278:	at: salut salut salut salut salut salut vector
test 279:	front: salut
test 280:	back: salut
test 281:	push_back: new elem = salut
test 282:	pop_back: new elem = salut
test 283:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 284:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 285:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 286:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 287:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 288:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 289:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 18 ------
--------------------------------
		VECTOR TYPE: Class test

test 290:	operator[]: Class test printing Class test printing 
test 291:	size: 2
test 292:	capacity: 2
test 293:	empty: 0
test 294:	iterators: Class test printing Class test printing 
test 295:	at: Class test printing Class test printing vector
test 296:	front: Class test printing
test 297:	back: Class test printing
test 298:	push_back: new elem = Class test printing
test 299:	pop_back: new elem = Class test printing
test 300:	swap: size of tmp = 3 and size of vec = 2
			size of tmp = 2 and size of vec = 3
test 301:	resize: size of tmp = 3
			new elem = Class test printing			size of tmp after resize = 3
test 302:	assign1: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 303:	assign2: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 304:	insert1: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 6
test 305:	insert2: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 18
test 306:	clear: size before clear: 3 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 19 ------
--------------------------------
		VECTOR TYPE: Class test

test 307:	operator[]: Class test printing Class test printing 
test 308:	size: 2
test 309:	capacity: 2
test 310:	empty: 0
test 311:	iterators: Class test printing Class test printing 
test 312:	at: Class test printing Class test printing vector
test 313:	front: Class test printing
test 314:	back: Class test printing
test 315:	push_back: new elem = Class test printing
test 316:	pop_back: new elem = Class test printing
test 317:	swap: size of tmp = 3 and size of vec = 2
			size of tmp = 2 and size of vec = 3
test 318:	resize: size of tmp = 3
			new elem = Class test printing			size of tmp after resize = 3
test 319:	assign1: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 320:	assign2: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 321:	insert1: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 6
test 322:	insert2: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 18
test 323:	clear: size before clear: 3 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 20 ------
--------------------------------
		VECTOR TYPE: Class test

test 324:	operator[]: Class test printing 
test 325:	size: 1
test 326:	capacity: 1
test 327:	empty: 0
test 328:	iterators: Class test printing 
test 329:	at: Class test printing vector
test 330:	front: Class test printing
test 331:	back: Class test printing
test 332:	push_back: new elem = Class test printing
test 333:	pop_back: new elem = Class test printing
test 334:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 335:	resize: size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
test 336:	assign1: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 337:	assign2: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 338:	insert1: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
test 339:	insert2: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
test 340:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 21 ------
--------------------------------
		VECTOR TYPE: Class test

test 341:	operator[]: Class test printing 
test 342:	size: 1
test 343:	capacity: 1
test 344:	empty: 0
test 345:	iterators: Class test printing 
test 346:	at: Class test printing vector
test 347:	front: Class test printing
test 348:	back: Class test printing
test 349:	push_back: new elem = Class test printing
test 350:	pop_back: new elem = Class test printing
test 351:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 352:	resize: size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
test 353:	assign1: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 354:	assign2: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 355:	insert1: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
test 356:	insert2: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
test 357:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 22 ------
--------------------------------
		VECTOR TYPE: int

test 358:	operator[]: 100 100 100 100 100 
test 359:	size: 5
test 360:	capacity: 5
test 361:	empty: 0
test 362:	iterators: 100 100 100 100 100 
test 363:	at: 100 100 100 100 100 vector
test 364:	front: 100
test 365:	back: 100

--------------------------------
------	TESTING VECTOR 23 ------
--------------------------------
		VECTOR TYPE: int

test 366:	operator[]: 
test 367:	size: 0
test 368:	capacity: 0
test 369:	empty: 1
test 370:	iterators: 
test 371:	at: vector
test 372:	front: 
test 373:	back: 

--------------------------------
------	TESTING VECTOR 24 ------
--------------------------------
		VECTOR TYPE: char

test 374:	operator[]: c c c c c c c c c c c c 
test 375:	size: 12
test 376:	capacity: 12
test 377:	empty: 0
test 378:	iterators: c c c c c c c c c c c c 
test 379:	at: c c c c c c c c c c c c vector
test 380:	front: c
test 381:	back: c

--------------------------------
------	TESTING VECTOR 25 ------
--------------------------------
		VECTOR TYPE: char

test 382:	operator[]: c c c c c c c c c c c c 
test 383:	size: 12
test 384:	capacity: 12
test 385:	empty: 0
test 386:	iterators: c c c c c c c c c c c c 
test 387:	at: c c c c c c c c c c c c vector
test 388:	front: c
test 389:	back: c

--------------------------------
------	TESTING VECTOR 26 ------
--------------------------------
		VECTOR TYPE: std::string

test 390:	operator[]: bonjour bonjour bonjour 
test 391:	size: 3
test 392:	capacity: 3
test 393:	empty: 0
test 394:	iterators: bonjour bonjour bonjour 
test 395:	at: bonjour bonjour bonjour vector
test 396:	front: bonjour
test 397:	back: bonjour