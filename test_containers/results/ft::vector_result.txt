

--------------------------------
------	TESTING VECTOR 1 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 1:	operator[]: 
			c c c c c c c c c c c c 
---------------------
test 2:	size: 
			12
---------------------
test 3:	capacity: 
			12
---------------------
test 4:	empty: 
			0
---------------------
test 5:	iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 			++operator: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 6:	reverse iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 7:	at: 
			c c c c c c c c c c c c vector
---------------------
test 8:	front: 
			c
---------------------
test 9:	back: 
			c
---------------------
test 10:	push_back: 
			new elem = c
---------------------
test 11:	pop_back: 
			new elem = c
---------------------
test 12:	swap member and non member: 
			size of tmp = 13 and size of tmp2 = 12
			size of tmp = 12 and size of tmp2 = 13			size of tmp = 13 and size of tmp2 = 12
---------------------
test 13:	resize: 
			size of tmp = 12
			new elem = c			size of tmp after resize = 3
---------------------
test 14:	assign1: 
			size of tmp = 12
			new elem = c			size after assign = 3and content is:
			c | c | c | 
---------------------
test 15:	assign2: 
			size of tmp = 12
			new elem = c			size after assign = 3and content is:
			c | c | c | 
---------------------
test 16:	insert1: 
			size of tmp = 12
			return value: c
			return value: c
			return value: c
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 15
---------------------
test 17:	insert2: 
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 27
---------------------
test 18:	insert3: 
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 48
---------------------
test 19:	erase1: 
			size of tmp = 12
			size of tmp = 0
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 12
			new elem after erase: c
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 11
			size of tmp = 12
			c | 
			size of tmp = 1
---------------------
test 20:	erase2: 
			size of tmp = 12
			new elem after erase: c
			size of tmp = 11
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 11
			size of tmp = 12
			c | 
			size of tmp = 11
---------------------
test 21:	clear: 
			size before clear: 12 | size after clear: 0new elem pushed after clear: c
---------------------
test 22:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 23:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 2 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 24:	operator[]: 
			c c c c c c c c c c c c 
---------------------
test 25:	size: 
			12
---------------------
test 26:	capacity: 
			12
---------------------
test 27:	empty: 
			0
---------------------
test 28:	iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 			++operator: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 29:	reverse iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 30:	at: 
			c c c c c c c c c c c c vector
---------------------
test 31:	front: 
			c
---------------------
test 32:	back: 
			c
---------------------
test 33:	push_back: 
			new elem = c
---------------------
test 34:	pop_back: 
			new elem = c
---------------------
test 35:	swap member and non member: 
			size of tmp = 13 and size of tmp2 = 12
			size of tmp = 12 and size of tmp2 = 13			size of tmp = 13 and size of tmp2 = 12
---------------------
test 36:	resize: 
			size of tmp = 12
			new elem = c			size of tmp after resize = 3
---------------------
test 37:	assign1: 
			size of tmp = 12
			new elem = c			size after assign = 3and content is:
			c | c | c | 
---------------------
test 38:	assign2: 
			size of tmp = 12
			new elem = c			size after assign = 3and content is:
			c | c | c | 
---------------------
test 39:	insert1: 
			size of tmp = 12
			return value: c
			return value: c
			return value: c
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 15
---------------------
test 40:	insert2: 
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 27
---------------------
test 41:	insert3: 
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 48
---------------------
test 42:	erase1: 
			size of tmp = 12
			size of tmp = 0
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 12
			new elem after erase: c
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 11
			size of tmp = 12
			c | 
			size of tmp = 1
---------------------
test 43:	erase2: 
			size of tmp = 12
			new elem after erase: c
			size of tmp = 11
			size of tmp = 12
			c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 11
			size of tmp = 12
			c | 
			size of tmp = 11
---------------------
test 44:	clear: 
			size before clear: 12 | size after clear: 0new elem pushed after clear: c
---------------------
test 45:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 46:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 3 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 47:	operator[]: 
			a 
---------------------
test 48:	size: 
			1
---------------------
test 49:	capacity: 
			1
---------------------
test 50:	empty: 
			0
---------------------
test 51:	iterators: 
			operator++: a | 			++operator: a | 
			operator+=: a | 
			operator+: a | 
			operator-=: a | 
			operator-: a | 
			operator[]: a | 
---------------------
test 52:	reverse iterators: 
			operator++: a | 
			operator+=: a | 
			operator+: a | 
			operator-=: a | 
			operator-: a | 
			operator[]: a | 
---------------------
test 53:	at: 
			a vector
---------------------
test 54:	front: 
			a
---------------------
test 55:	back: 
			a
---------------------
test 56:	push_back: 
			new elem = a
---------------------
test 57:	pop_back: 
			new elem = a
---------------------
test 58:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 59:	resize: 
			size of tmp = 1
			new elem = a			size of tmp after resize = 3
---------------------
test 60:	assign1: 
			size of tmp = 1
			new elem = a			size after assign = 3and content is:
			a | a | a | 
---------------------
test 61:	assign2: 
			size of tmp = 1
			new elem = a			size after assign = 3and content is:
			a | a | a | 
---------------------
test 62:	insert1: 
			size of tmp = 1
			return value: a
			return value: a
			return value: a
			a | a | a | a | 
			size of tmp = 4
---------------------
test 63:	insert2: 
			size of tmp = 1
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 16
---------------------
test 64:	insert3: 
			size of tmp = 1
			a | a | a | a | 
			size of tmp = 4
---------------------
test 65:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			a | 
			size of tmp = 1
			new elem after erase: a
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			a | 
			size of tmp = 1
---------------------
test 66:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 67:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: a
---------------------
test 68:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 69:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 4 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 70:	operator[]: 
			a 
---------------------
test 71:	size: 
			1
---------------------
test 72:	capacity: 
			1
---------------------
test 73:	empty: 
			0
---------------------
test 74:	iterators: 
			operator++: a | 			++operator: a | 
			operator+=: a | 
			operator+: a | 
			operator-=: a | 
			operator-: a | 
			operator[]: a | 
---------------------
test 75:	reverse iterators: 
			operator++: a | 
			operator+=: a | 
			operator+: a | 
			operator-=: a | 
			operator-: a | 
			operator[]: a | 
---------------------
test 76:	at: 
			a vector
---------------------
test 77:	front: 
			a
---------------------
test 78:	back: 
			a
---------------------
test 79:	push_back: 
			new elem = a
---------------------
test 80:	pop_back: 
			new elem = a
---------------------
test 81:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 82:	resize: 
			size of tmp = 1
			new elem = a			size of tmp after resize = 3
---------------------
test 83:	assign1: 
			size of tmp = 1
			new elem = a			size after assign = 3and content is:
			a | a | a | 
---------------------
test 84:	assign2: 
			size of tmp = 1
			new elem = a			size after assign = 3and content is:
			a | a | a | 
---------------------
test 85:	insert1: 
			size of tmp = 1
			return value: a
			return value: a
			return value: a
			a | a | a | a | 
			size of tmp = 4
---------------------
test 86:	insert2: 
			size of tmp = 1
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 16
---------------------
test 87:	insert3: 
			size of tmp = 1
			a | a | a | a | 
			size of tmp = 4
---------------------
test 88:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			a | 
			size of tmp = 1
			new elem after erase: a
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			a | 
			size of tmp = 1
---------------------
test 89:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 90:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: a
---------------------
test 91:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 92:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 5 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 93:	operator[]: 
			100 100 100 100 100 
---------------------
test 94:	size: 
			5
---------------------
test 95:	capacity: 
			5
---------------------
test 96:	empty: 
			0
---------------------
test 97:	iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 			++operator: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 98:	reverse iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 99:	at: 
			100 100 100 100 100 vector
---------------------
test 100:	front: 
			100
---------------------
test 101:	back: 
			100
---------------------
test 102:	push_back: 
			new elem = 100
---------------------
test 103:	pop_back: 
			new elem = 100
---------------------
test 104:	swap member and non member: 
			size of tmp = 6 and size of tmp2 = 5
			size of tmp = 5 and size of tmp2 = 6			size of tmp = 6 and size of tmp2 = 5
---------------------
test 105:	resize: 
			size of tmp = 5
			new elem = 100			size of tmp after resize = 3
---------------------
test 106:	assign1: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 107:	assign2: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 108:	insert1: 
			size of tmp = 5
			return value: 100
			return value: 100
			return value: 100
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 8
---------------------
test 109:	insert2: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 110:	insert3: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 111:	erase1: 
			size of tmp = 5
			size of tmp = 0
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 1
---------------------
test 112:	erase2: 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 4
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 4
---------------------
test 113:	clear: 
			size before clear: 5 | size after clear: 0new elem pushed after clear: 100
---------------------
test 114:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 115:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 6 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 116:	operator[]: 
			
---------------------
test 117:	size: 
			0
---------------------
test 118:	capacity: 
			0
---------------------
test 119:	empty: 
			1
---------------------
test 120:	iterators: 
			operator++: 			++operator: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 121:	reverse iterators: 
			operator++: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 122:	at: 
			vector
---------------------
test 123:	front: 
			
---------------------
test 124:	back: 
			
---------------------
test 125:	push_back: 
			new elem = 0
---------------------
test 126:	pop_back: 
			
---------------------
test 127:	swap member and non member: 
			size of tmp = 1 and size of tmp2 = 0
			size of tmp = 0 and size of tmp2 = 1			size of tmp = 1 and size of tmp2 = 0
---------------------
test 128:	resize: 
			size of tmp = 0
			new elem = 0			size of tmp after resize = 3
---------------------
test 129:	assign1: 
			size of tmp = 0
			new elem = 0			size after assign = 3and content is:
			
---------------------
test 130:	assign2: 
			size of tmp = 0
			new elem = 0			size after assign = 3and content is:
			0 | 0 | 0 | 
---------------------
test 131:	insert1: 
			size of tmp = 0
			return value: 0
			return value: 0
			0 | 0 | 
			size of tmp = 2
---------------------
test 132:	insert2: 
			size of tmp = 0
			0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 
			size of tmp = 10
---------------------
test 133:	insert3: 
			size of tmp = 0
			
			size of tmp = 0
---------------------
test 134:	erase1: 
			size of tmp = 0
			size of tmp = 0
			size of tmp = 0
			
			size of tmp = 0
---------------------
test 135:	erase2: 
			
---------------------
test 136:	clear: 
			size before clear: 0 | size after clear: 0new elem pushed after clear: 0
---------------------
test 137:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 138:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 7 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 139:	operator[]: 
			89123891 
---------------------
test 140:	size: 
			1
---------------------
test 141:	capacity: 
			1
---------------------
test 142:	empty: 
			0
---------------------
test 143:	iterators: 
			operator++: 89123891 | 			++operator: 89123891 | 
			operator+=: 89123891 | 
			operator+: 89123891 | 
			operator-=: 89123891 | 
			operator-: 89123891 | 
			operator[]: 89123891 | 
---------------------
test 144:	reverse iterators: 
			operator++: 89123891 | 
			operator+=: 89123891 | 
			operator+: 89123891 | 
			operator-=: 89123891 | 
			operator-: 89123891 | 
			operator[]: 89123891 | 
---------------------
test 145:	at: 
			89123891 vector
---------------------
test 146:	front: 
			89123891
---------------------
test 147:	back: 
			89123891
---------------------
test 148:	push_back: 
			new elem = 89123891
---------------------
test 149:	pop_back: 
			new elem = 89123891
---------------------
test 150:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 151:	resize: 
			size of tmp = 1
			new elem = 89123891			size of tmp after resize = 3
---------------------
test 152:	assign1: 
			size of tmp = 1
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
---------------------
test 153:	assign2: 
			size of tmp = 1
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
---------------------
test 154:	insert1: 
			size of tmp = 1
			return value: 89123891
			return value: 89123891
			return value: 89123891
			89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 4
---------------------
test 155:	insert2: 
			size of tmp = 1
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 16
---------------------
test 156:	insert3: 
			size of tmp = 1
			89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 4
---------------------
test 157:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			89123891 | 
			size of tmp = 1
			new elem after erase: 89123891
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			89123891 | 
			size of tmp = 1
---------------------
test 158:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 159:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: 89123891
---------------------
test 160:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 161:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 8 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 162:	operator[]: 
			100 100 100 100 100 
---------------------
test 163:	size: 
			5
---------------------
test 164:	capacity: 
			5
---------------------
test 165:	empty: 
			0
---------------------
test 166:	iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 			++operator: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 167:	reverse iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 168:	at: 
			100 100 100 100 100 vector
---------------------
test 169:	front: 
			100
---------------------
test 170:	back: 
			100
---------------------
test 171:	push_back: 
			new elem = 100
---------------------
test 172:	pop_back: 
			new elem = 100
---------------------
test 173:	swap member and non member: 
			size of tmp = 6 and size of tmp2 = 5
			size of tmp = 5 and size of tmp2 = 6			size of tmp = 6 and size of tmp2 = 5
---------------------
test 174:	resize: 
			size of tmp = 5
			new elem = 100			size of tmp after resize = 3
---------------------
test 175:	assign1: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 176:	assign2: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 177:	insert1: 
			size of tmp = 5
			return value: 100
			return value: 100
			return value: 100
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 8
---------------------
test 178:	insert2: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 179:	insert3: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 180:	erase1: 
			size of tmp = 5
			size of tmp = 0
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 1
---------------------
test 181:	erase2: 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 4
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 4
---------------------
test 182:	clear: 
			size before clear: 5 | size after clear: 0new elem pushed after clear: 100
---------------------
test 183:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 184:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 9 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 185:	operator[]: 
			100 100 100 100 100 
---------------------
test 186:	size: 
			5
---------------------
test 187:	capacity: 
			5
---------------------
test 188:	empty: 
			0
---------------------
test 189:	iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 			++operator: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 190:	reverse iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 191:	at: 
			100 100 100 100 100 vector
---------------------
test 192:	front: 
			100
---------------------
test 193:	back: 
			100
---------------------
test 194:	push_back: 
			new elem = 100
---------------------
test 195:	pop_back: 
			new elem = 100
---------------------
test 196:	swap member and non member: 
			size of tmp = 6 and size of tmp2 = 5
			size of tmp = 5 and size of tmp2 = 6			size of tmp = 6 and size of tmp2 = 5
---------------------
test 197:	resize: 
			size of tmp = 5
			new elem = 100			size of tmp after resize = 3
---------------------
test 198:	assign1: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 199:	assign2: 
			size of tmp = 5
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
---------------------
test 200:	insert1: 
			size of tmp = 5
			return value: 100
			return value: 100
			return value: 100
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 8
---------------------
test 201:	insert2: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 202:	insert3: 
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 20
---------------------
test 203:	erase1: 
			size of tmp = 5
			size of tmp = 0
			size of tmp = 5
			100 | 100 | 100 | 100 | 100 | 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 1
---------------------
test 204:	erase2: 
			size of tmp = 5
			new elem after erase: 100
			size of tmp = 4
			size of tmp = 5
			100 | 100 | 100 | 100 | 
			size of tmp = 4
			size of tmp = 5
			100 | 
			size of tmp = 4
---------------------
test 205:	clear: 
			size before clear: 5 | size after clear: 0new elem pushed after clear: 100
---------------------
test 206:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 207:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 10 ------
--------------------------------
		VECTOR TYPE: double*

---------------------
test 208:	operator[]: 
			
---------------------
test 209:	size: 
			0
---------------------
test 210:	capacity: 
			0
---------------------
test 211:	empty: 
			1
---------------------
test 212:	iterators: 
			operator++: 			++operator: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 213:	reverse iterators: 
			operator++: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 214:	at: 
			vector
---------------------
test 215:	front: 
			
---------------------
test 216:	back: 
			
---------------------
test 217:	push_back: 
			new elem = 0x0
---------------------
test 218:	pop_back: 
			
---------------------
test 219:	swap member and non member: 
			size of tmp = 1 and size of tmp2 = 0
			size of tmp = 0 and size of tmp2 = 1			size of tmp = 1 and size of tmp2 = 0
---------------------
test 220:	resize: 
			size of tmp = 0
			new elem = 0x0			size of tmp after resize = 3
---------------------
test 221:	assign1: 
			size of tmp = 0
			new elem = 0x0			size after assign = 3and content is:
			
---------------------
test 222:	assign2: 
			size of tmp = 0
			new elem = 0x0			size after assign = 3and content is:
			0x0 | 0x0 | 0x0 | 
---------------------
test 223:	insert1: 
			size of tmp = 0
			return value: 0x0
			return value: 0x0
			0x0 | 0x0 | 
			size of tmp = 2
---------------------
test 224:	insert2: 
			size of tmp = 0
			0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 10
---------------------
test 225:	insert3: 
			size of tmp = 0
			
			size of tmp = 0
---------------------
test 226:	erase1: 
			size of tmp = 0
			size of tmp = 0
			size of tmp = 0
			
			size of tmp = 0
---------------------
test 227:	erase2: 
			
---------------------
test 228:	clear: 
			size before clear: 0 | size after clear: 0new elem pushed after clear: 0x0
---------------------
test 229:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 230:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 11 ------
--------------------------------
		VECTOR TYPE: double*

---------------------
test 231:	operator[]: 
			0x7ffee5c96a80 
---------------------
test 232:	size: 
			1
---------------------
test 233:	capacity: 
			1
---------------------
test 234:	empty: 
			0
---------------------
test 235:	iterators: 
			operator++: 0x7ffee5c96a80 | 			++operator: 0x7ffee5c96a80 | 
			operator+=: 0x7ffee5c96a80 | 
			operator+: 0x7ffee5c96a80 | 
			operator-=: 0x7ffee5c96a80 | 
			operator-: 0x7ffee5c96a80 | 
			operator[]: 0x7ffee5c96a80 | 
---------------------
test 236:	reverse iterators: 
			operator++: 0x7ffee5c96a80 | 
			operator+=: 0x7ffee5c96a80 | 
			operator+: 0x7ffee5c96a80 | 
			operator-=: 0x7ffee5c96a80 | 
			operator-: 0x7ffee5c96a80 | 
			operator[]: 0x7ffee5c96a80 | 
---------------------
test 237:	at: 
			0x7ffee5c96a80 vector
---------------------
test 238:	front: 
			0x7ffee5c96a80
---------------------
test 239:	back: 
			0x7ffee5c96a80
---------------------
test 240:	push_back: 
			new elem = 0x7ffee5c96a80
---------------------
test 241:	pop_back: 
			new elem = 0x7ffee5c96a80
---------------------
test 242:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 243:	resize: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size of tmp after resize = 3
---------------------
test 244:	assign1: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size after assign = 3and content is:
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
---------------------
test 245:	assign2: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size after assign = 3and content is:
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
---------------------
test 246:	insert1: 
			size of tmp = 1
			return value: 0x7ffee5c96a80
			return value: 0x7ffee5c96a80
			return value: 0x7ffee5c96a80
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 4
---------------------
test 247:	insert2: 
			size of tmp = 1
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 16
---------------------
test 248:	insert3: 
			size of tmp = 1
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 4
---------------------
test 249:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			0x7ffee5c96a80 | 
			size of tmp = 1
			new elem after erase: 0x7ffee5c96a80
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			0x7ffee5c96a80 | 
			size of tmp = 1
---------------------
test 250:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 251:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: 0x7ffee5c96a80
---------------------
test 252:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 253:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 12 ------
--------------------------------
		VECTOR TYPE: double*

---------------------
test 254:	operator[]: 
			0x7ffee5c96a80 
---------------------
test 255:	size: 
			1
---------------------
test 256:	capacity: 
			1
---------------------
test 257:	empty: 
			0
---------------------
test 258:	iterators: 
			operator++: 0x7ffee5c96a80 | 			++operator: 0x7ffee5c96a80 | 
			operator+=: 0x7ffee5c96a80 | 
			operator+: 0x7ffee5c96a80 | 
			operator-=: 0x7ffee5c96a80 | 
			operator-: 0x7ffee5c96a80 | 
			operator[]: 0x7ffee5c96a80 | 
---------------------
test 259:	reverse iterators: 
			operator++: 0x7ffee5c96a80 | 
			operator+=: 0x7ffee5c96a80 | 
			operator+: 0x7ffee5c96a80 | 
			operator-=: 0x7ffee5c96a80 | 
			operator-: 0x7ffee5c96a80 | 
			operator[]: 0x7ffee5c96a80 | 
---------------------
test 260:	at: 
			0x7ffee5c96a80 vector
---------------------
test 261:	front: 
			0x7ffee5c96a80
---------------------
test 262:	back: 
			0x7ffee5c96a80
---------------------
test 263:	push_back: 
			new elem = 0x7ffee5c96a80
---------------------
test 264:	pop_back: 
			new elem = 0x7ffee5c96a80
---------------------
test 265:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 266:	resize: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size of tmp after resize = 3
---------------------
test 267:	assign1: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size after assign = 3and content is:
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
---------------------
test 268:	assign2: 
			size of tmp = 1
			new elem = 0x7ffee5c96a80			size after assign = 3and content is:
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
---------------------
test 269:	insert1: 
			size of tmp = 1
			return value: 0x7ffee5c96a80
			return value: 0x7ffee5c96a80
			return value: 0x7ffee5c96a80
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 4
---------------------
test 270:	insert2: 
			size of tmp = 1
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 16
---------------------
test 271:	insert3: 
			size of tmp = 1
			0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 0x7ffee5c96a80 | 
			size of tmp = 4
---------------------
test 272:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			0x7ffee5c96a80 | 
			size of tmp = 1
			new elem after erase: 0x7ffee5c96a80
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			0x7ffee5c96a80 | 
			size of tmp = 1
---------------------
test 273:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 274:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: 0x7ffee5c96a80
---------------------
test 275:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 276:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 13 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 277:	operator[]: 
			salut salut salut salut salut salut 
---------------------
test 278:	size: 
			6
---------------------
test 279:	capacity: 
			6
---------------------
test 280:	empty: 
			0
---------------------
test 281:	iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 			++operator: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 282:	reverse iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 283:	at: 
			salut salut salut salut salut salut vector
---------------------
test 284:	front: 
			salut
---------------------
test 285:	back: 
			salut
---------------------
test 286:	push_back: 
			new elem = salut
---------------------
test 287:	pop_back: 
			new elem = salut
---------------------
test 288:	swap member and non member: 
			size of tmp = 7 and size of tmp2 = 6
			size of tmp = 6 and size of tmp2 = 7			size of tmp = 7 and size of tmp2 = 6
---------------------
test 289:	resize: 
			size of tmp = 6
			new elem = salut			size of tmp after resize = 3
---------------------
test 290:	assign1: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 291:	assign2: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 292:	insert1: 
			size of tmp = 6
			return value: salut
			return value: salut
			return value: salut
			salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 9
---------------------
test 293:	insert2: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 21
---------------------
test 294:	insert3: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 24
---------------------
test 295:	erase1: 
			size of tmp = 6
			size of tmp = 0
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 1
---------------------
test 296:	erase2: 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 5
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 5
---------------------
test 297:	clear: 
			size before clear: 6 | size after clear: 0new elem pushed after clear: salut
---------------------
test 298:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 299:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 14 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 300:	operator[]: 
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj 
---------------------
test 301:	size: 
			6
---------------------
test 302:	capacity: 
			6
---------------------
test 303:	empty: 
			0
---------------------
test 304:	iterators: 
			operator++: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 			++operator: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			operator+=: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			operator+: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			operator-=: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			operator-: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			operator[]: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
---------------------
test 305:	reverse iterators: 
			operator++: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			operator+=: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			operator+: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			operator-=: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			operator-: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			operator[]: jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
---------------------
test 306:	at: 
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj vector
---------------------
test 307:	front: 
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
---------------------
test 308:	back: 
			jbhkfbhsj
---------------------
test 309:	push_back: 
			new elem = jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
---------------------
test 310:	pop_back: 
			new elem = jbhkfbhsj
---------------------
test 311:	swap member and non member: 
			size of tmp = 7 and size of tmp2 = 6
			size of tmp = 6 and size of tmp2 = 7			size of tmp = 7 and size of tmp2 = 6
---------------------
test 312:	resize: 
			size of tmp = 6
			new elem = salut			size of tmp after resize = 3
---------------------
test 313:	assign1: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | 
---------------------
test 314:	assign2: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
---------------------
test 315:	insert1: 
			size of tmp = 6
			return value: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
			return value: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
			return value: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 9
---------------------
test 316:	insert2: 
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 21
---------------------
test 317:	insert3: 
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			size of tmp = 24
---------------------
test 318:	erase1: 
			size of tmp = 6
			size of tmp = 0
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | 
			size of tmp = 6
			new elem after erase: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 1
---------------------
test 319:	erase2: 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 5
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 5
---------------------
test 320:	clear: 
			size before clear: 6 | size after clear: 0new elem pushed after clear: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
---------------------
test 321:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 322:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 15 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 323:	operator[]: 
			    
---------------------
test 324:	size: 
			4
---------------------
test 325:	capacity: 
			4
---------------------
test 326:	empty: 
			0
---------------------
test 327:	iterators: 
			operator++:  |  |  |  | 			++operator:  |  |  |  | 
			operator+=:  |  |  |  | 
			operator+:  |  |  |  | 
			operator-=:  |  |  |  | 
			operator-:  |  |  |  | 
			operator[]:  |  |  |  | 
---------------------
test 328:	reverse iterators: 
			operator++:  |  |  |  | 
			operator+=:  |  |  |  | 
			operator+:  |  |  |  | 
			operator-=:  |  |  |  | 
			operator-:  |  |  |  | 
			operator[]:  |  |  |  | 
---------------------
test 329:	at: 
			    vector
---------------------
test 330:	front: 
			
---------------------
test 331:	back: 
			
---------------------
test 332:	push_back: 
			new elem = 
---------------------
test 333:	pop_back: 
			new elem = 
---------------------
test 334:	swap member and non member: 
			size of tmp = 5 and size of tmp2 = 4
			size of tmp = 4 and size of tmp2 = 5			size of tmp = 5 and size of tmp2 = 4
---------------------
test 335:	resize: 
			size of tmp = 4
			new elem = 			size of tmp after resize = 3
---------------------
test 336:	assign1: 
			size of tmp = 4
			new elem = 			size after assign = 3and content is:
			 |  |  | 
---------------------
test 337:	assign2: 
			size of tmp = 4
			new elem = 			size after assign = 3and content is:
			 |  |  | 
---------------------
test 338:	insert1: 
			size of tmp = 4
			return value: 
			return value: 
			return value: 
			 |  |  |  |  |  |  | 
			size of tmp = 7
---------------------
test 339:	insert2: 
			size of tmp = 4
			 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | 
			size of tmp = 19
---------------------
test 340:	insert3: 
			size of tmp = 4
			 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | 
			size of tmp = 16
---------------------
test 341:	erase1: 
			size of tmp = 4
			size of tmp = 0
			size of tmp = 4
			 |  |  |  | 
			size of tmp = 4
			new elem after erase: 
			size of tmp = 4
			 |  |  | 
			size of tmp = 3
			size of tmp = 4
			 | 
			size of tmp = 1
---------------------
test 342:	erase2: 
			size of tmp = 4
			new elem after erase: 
			size of tmp = 3
			size of tmp = 4
			 |  |  | 
			size of tmp = 3
			size of tmp = 4
			 | 
			size of tmp = 3
---------------------
test 343:	clear: 
			size before clear: 4 | size after clear: 0new elem pushed after clear: 
---------------------
test 344:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 345:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 16 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 346:	operator[]: 
			salut salut salut salut salut salut 
---------------------
test 347:	size: 
			6
---------------------
test 348:	capacity: 
			6
---------------------
test 349:	empty: 
			0
---------------------
test 350:	iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 			++operator: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 351:	reverse iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 352:	at: 
			salut salut salut salut salut salut vector
---------------------
test 353:	front: 
			salut
---------------------
test 354:	back: 
			salut
---------------------
test 355:	push_back: 
			new elem = salut
---------------------
test 356:	pop_back: 
			new elem = salut
---------------------
test 357:	swap member and non member: 
			size of tmp = 7 and size of tmp2 = 6
			size of tmp = 6 and size of tmp2 = 7			size of tmp = 7 and size of tmp2 = 6
---------------------
test 358:	resize: 
			size of tmp = 6
			new elem = salut			size of tmp after resize = 3
---------------------
test 359:	assign1: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 360:	assign2: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 361:	insert1: 
			size of tmp = 6
			return value: salut
			return value: salut
			return value: salut
			salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 9
---------------------
test 362:	insert2: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 21
---------------------
test 363:	insert3: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 24
---------------------
test 364:	erase1: 
			size of tmp = 6
			size of tmp = 0
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 1
---------------------
test 365:	erase2: 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 5
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 5
---------------------
test 366:	clear: 
			size before clear: 6 | size after clear: 0new elem pushed after clear: salut
---------------------
test 367:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 368:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 17 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 369:	operator[]: 
			salut salut salut salut salut salut 
---------------------
test 370:	size: 
			6
---------------------
test 371:	capacity: 
			6
---------------------
test 372:	empty: 
			0
---------------------
test 373:	iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 			++operator: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 374:	reverse iterators: 
			operator++: salut | salut | salut | salut | salut | salut | 
			operator+=: salut | salut | salut | salut | salut | salut | 
			operator+: salut | salut | salut | salut | salut | salut | 
			operator-=: salut | salut | salut | salut | salut | salut | 
			operator-: salut | salut | salut | salut | salut | salut | 
			operator[]: salut | salut | salut | salut | salut | salut | 
---------------------
test 375:	at: 
			salut salut salut salut salut salut vector
---------------------
test 376:	front: 
			salut
---------------------
test 377:	back: 
			salut
---------------------
test 378:	push_back: 
			new elem = salut
---------------------
test 379:	pop_back: 
			new elem = salut
---------------------
test 380:	swap member and non member: 
			size of tmp = 7 and size of tmp2 = 6
			size of tmp = 6 and size of tmp2 = 7			size of tmp = 7 and size of tmp2 = 6
---------------------
test 381:	resize: 
			size of tmp = 6
			new elem = salut			size of tmp after resize = 3
---------------------
test 382:	assign1: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 383:	assign2: 
			size of tmp = 6
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
---------------------
test 384:	insert1: 
			size of tmp = 6
			return value: salut
			return value: salut
			return value: salut
			salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 9
---------------------
test 385:	insert2: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 21
---------------------
test 386:	insert3: 
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 24
---------------------
test 387:	erase1: 
			size of tmp = 6
			size of tmp = 0
			size of tmp = 6
			salut | salut | salut | salut | salut | salut | 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 1
---------------------
test 388:	erase2: 
			size of tmp = 6
			new elem after erase: salut
			size of tmp = 5
			size of tmp = 6
			salut | salut | salut | salut | salut | 
			size of tmp = 5
			size of tmp = 6
			salut | 
			size of tmp = 5
---------------------
test 389:	clear: 
			size before clear: 6 | size after clear: 0new elem pushed after clear: salut
---------------------
test 390:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 391:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 18 ------
--------------------------------
		VECTOR TYPE: Class test

---------------------
test 392:	operator[]: 
			Class test printing Class test printing 
---------------------
test 393:	size: 
			2
---------------------
test 394:	capacity: 
			2
---------------------
test 395:	empty: 
			0
---------------------
test 396:	iterators: 
			operator++: Class test printing | Class test printing | 			++operator: Class test printing | Class test printing | 
			operator+=: Class test printing | Class test printing | 
			operator+: Class test printing | Class test printing | 
			operator-=: Class test printing | Class test printing | 
			operator-: Class test printing | Class test printing | 
			operator[]: Class test printing | Class test printing | 
---------------------
test 397:	reverse iterators: 
			operator++: Class test printing | Class test printing | 
			operator+=: Class test printing | Class test printing | 
			operator+: Class test printing | Class test printing | 
			operator-=: Class test printing | Class test printing | 
			operator-: Class test printing | Class test printing | 
			operator[]: Class test printing | Class test printing | 
---------------------
test 398:	at: 
			Class test printing Class test printing vector
---------------------
test 399:	front: 
			Class test printing
---------------------
test 400:	back: 
			Class test printing
---------------------
test 401:	push_back: 
			new elem = Class test printing
---------------------
test 402:	pop_back: 
			new elem = Class test printing
---------------------
test 403:	swap member and non member: 
			size of tmp = 3 and size of tmp2 = 2
			size of tmp = 2 and size of tmp2 = 3			size of tmp = 3 and size of tmp2 = 2
---------------------
test 404:	resize: 
			size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
---------------------
test 405:	assign1: 
			size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 406:	assign2: 
			size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 407:	insert1: 
			size of tmp = 2
			return value: Class test printing
			return value: Class test printing
			return value: Class test printing
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
---------------------
test 408:	insert2: 
			size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
---------------------
test 409:	insert3: 
			size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 8
---------------------
test 410:	erase1: 
			size of tmp = 2
			size of tmp = 0
			size of tmp = 2
			Class test printing | Class test printing | 
			size of tmp = 2
			new elem after erase: Class test printing
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
---------------------
test 411:	erase2: 
			size of tmp = 2
			new elem after erase: Class test printing
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
---------------------
test 412:	clear: 
			size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing
---------------------
test 413:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 414:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 19 ------
--------------------------------
		VECTOR TYPE: Class test

---------------------
test 415:	operator[]: 
			Class test printing Class test printing 
---------------------
test 416:	size: 
			2
---------------------
test 417:	capacity: 
			2
---------------------
test 418:	empty: 
			0
---------------------
test 419:	iterators: 
			operator++: Class test printing | Class test printing | 			++operator: Class test printing | Class test printing | 
			operator+=: Class test printing | Class test printing | 
			operator+: Class test printing | Class test printing | 
			operator-=: Class test printing | Class test printing | 
			operator-: Class test printing | Class test printing | 
			operator[]: Class test printing | Class test printing | 
---------------------
test 420:	reverse iterators: 
			operator++: Class test printing | Class test printing | 
			operator+=: Class test printing | Class test printing | 
			operator+: Class test printing | Class test printing | 
			operator-=: Class test printing | Class test printing | 
			operator-: Class test printing | Class test printing | 
			operator[]: Class test printing | Class test printing | 
---------------------
test 421:	at: 
			Class test printing Class test printing vector
---------------------
test 422:	front: 
			Class test printing
---------------------
test 423:	back: 
			Class test printing
---------------------
test 424:	push_back: 
			new elem = Class test printing
---------------------
test 425:	pop_back: 
			new elem = Class test printing
---------------------
test 426:	swap member and non member: 
			size of tmp = 3 and size of tmp2 = 2
			size of tmp = 2 and size of tmp2 = 3			size of tmp = 3 and size of tmp2 = 2
---------------------
test 427:	resize: 
			size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
---------------------
test 428:	assign1: 
			size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 429:	assign2: 
			size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 430:	insert1: 
			size of tmp = 2
			return value: Class test printing
			return value: Class test printing
			return value: Class test printing
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
---------------------
test 431:	insert2: 
			size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
---------------------
test 432:	insert3: 
			size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 8
---------------------
test 433:	erase1: 
			size of tmp = 2
			size of tmp = 0
			size of tmp = 2
			Class test printing | Class test printing | 
			size of tmp = 2
			new elem after erase: Class test printing
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
---------------------
test 434:	erase2: 
			size of tmp = 2
			new elem after erase: Class test printing
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
			size of tmp = 2
			Class test printing | 
			size of tmp = 1
---------------------
test 435:	clear: 
			size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing
---------------------
test 436:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 437:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 20 ------
--------------------------------
		VECTOR TYPE: Class test

---------------------
test 438:	operator[]: 
			Class test printing 
---------------------
test 439:	size: 
			1
---------------------
test 440:	capacity: 
			1
---------------------
test 441:	empty: 
			0
---------------------
test 442:	iterators: 
			operator++: Class test printing | 			++operator: Class test printing | 
			operator+=: Class test printing | 
			operator+: Class test printing | 
			operator-=: Class test printing | 
			operator-: Class test printing | 
			operator[]: Class test printing | 
---------------------
test 443:	reverse iterators: 
			operator++: Class test printing | 
			operator+=: Class test printing | 
			operator+: Class test printing | 
			operator-=: Class test printing | 
			operator-: Class test printing | 
			operator[]: Class test printing | 
---------------------
test 444:	at: 
			Class test printing vector
---------------------
test 445:	front: 
			Class test printing
---------------------
test 446:	back: 
			Class test printing
---------------------
test 447:	push_back: 
			new elem = Class test printing
---------------------
test 448:	pop_back: 
			new elem = Class test printing
---------------------
test 449:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 450:	resize: 
			size of tmp = 1
			new elem = Class test printing			size of tmp after resize = 3
---------------------
test 451:	assign1: 
			size of tmp = 1
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 452:	assign2: 
			size of tmp = 1
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 453:	insert1: 
			size of tmp = 1
			return value: Class test printing
			return value: Class test printing
			return value: Class test printing
			Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 4
---------------------
test 454:	insert2: 
			size of tmp = 1
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 16
---------------------
test 455:	insert3: 
			size of tmp = 1
			Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 4
---------------------
test 456:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			Class test printing | 
			size of tmp = 1
			new elem after erase: Class test printing
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			Class test printing | 
			size of tmp = 1
---------------------
test 457:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 458:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: Class test printing
---------------------
test 459:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 460:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 21 ------
--------------------------------
		VECTOR TYPE: Class test

---------------------
test 461:	operator[]: 
			Class test printing 
---------------------
test 462:	size: 
			1
---------------------
test 463:	capacity: 
			1
---------------------
test 464:	empty: 
			0
---------------------
test 465:	iterators: 
			operator++: Class test printing | 			++operator: Class test printing | 
			operator+=: Class test printing | 
			operator+: Class test printing | 
			operator-=: Class test printing | 
			operator-: Class test printing | 
			operator[]: Class test printing | 
---------------------
test 466:	reverse iterators: 
			operator++: Class test printing | 
			operator+=: Class test printing | 
			operator+: Class test printing | 
			operator-=: Class test printing | 
			operator-: Class test printing | 
			operator[]: Class test printing | 
---------------------
test 467:	at: 
			Class test printing vector
---------------------
test 468:	front: 
			Class test printing
---------------------
test 469:	back: 
			Class test printing
---------------------
test 470:	push_back: 
			new elem = Class test printing
---------------------
test 471:	pop_back: 
			new elem = Class test printing
---------------------
test 472:	swap member and non member: 
			size of tmp = 2 and size of tmp2 = 1
			size of tmp = 1 and size of tmp2 = 2			size of tmp = 2 and size of tmp2 = 1
---------------------
test 473:	resize: 
			size of tmp = 1
			new elem = Class test printing			size of tmp after resize = 3
---------------------
test 474:	assign1: 
			size of tmp = 1
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 475:	assign2: 
			size of tmp = 1
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
---------------------
test 476:	insert1: 
			size of tmp = 1
			return value: Class test printing
			return value: Class test printing
			return value: Class test printing
			Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 4
---------------------
test 477:	insert2: 
			size of tmp = 1
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 16
---------------------
test 478:	insert3: 
			size of tmp = 1
			Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 4
---------------------
test 479:	erase1: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			Class test printing | 
			size of tmp = 1
			new elem after erase: Class test printing
			size of tmp = 1
			
			size of tmp = 0
			size of tmp = 1
			Class test printing | 
			size of tmp = 1
---------------------
test 480:	erase2: 
			size of tmp = 1
			size of tmp = 0
			size of tmp = 1
			
			size of tmp = 0
			
---------------------
test 481:	clear: 
			size before clear: 1 | size after clear: 0new elem pushed after clear: Class test printing
---------------------
test 482:	operator==/!=: 
			tmp == vec (should be true): 1
			tmp != vec (should be false): 0
			tmp == vec (should be false): 0
			tmp != vec (should be true): 1
			tmp == vec (should be false): 0
			tmp2 != tmp (should be true): 1
			tmp == vec (should be true): 1
			tmp2 != tmp (should be false): 0
---------------------
test 483:	operator</>/<=/>=: 
			tmp < vec: 0
			tmp > vec: 0
			tmp <= vec: 1
			tmp >= vec: 1
			vec < tmp: 1
			vec > tmp: 0
			vec <= tmp: 1
			vec >= tmp: 0
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 1
			tmp2 <= tmp: 0
			tmp2 >= tmp: 1
			tmp2 < tmp: 0
			tmp2 > tmp: 0
			tmp2 <= tmp: 1
			tmp2 >= tmp: 1

--------------------------------
------	TESTING VECTOR 22 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 484:	operator[]: 
			100 100 100 100 100 
---------------------
test 485:	size: 
			5
---------------------
test 486:	capacity: 
			5
---------------------
test 487:	empty: 
			0
---------------------
test 488:	iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 			++operator: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 489:	reverse iterators: 
			operator++: 100 | 100 | 100 | 100 | 100 | 
			operator+=: 100 | 100 | 100 | 100 | 100 | 
			operator+: 100 | 100 | 100 | 100 | 100 | 
			operator-=: 100 | 100 | 100 | 100 | 100 | 
			operator-: 100 | 100 | 100 | 100 | 100 | 
			operator[]: 100 | 100 | 100 | 100 | 100 | 
---------------------
test 490:	at: 
			100 100 100 100 100 vector
---------------------
test 491:	front: 
			100
---------------------
test 492:	back: 
			100

--------------------------------
------	TESTING VECTOR 23 ------
--------------------------------
		VECTOR TYPE: int

---------------------
test 493:	operator[]: 
			
---------------------
test 494:	size: 
			0
---------------------
test 495:	capacity: 
			0
---------------------
test 496:	empty: 
			1
---------------------
test 497:	iterators: 
			operator++: 			++operator: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 498:	reverse iterators: 
			operator++: 
			operator+=: 
			operator+: 
			operator-=: 
			operator-: 
			operator[]: 
---------------------
test 499:	at: 
			vector
---------------------
test 500:	front: 
			
---------------------
test 501:	back: 
			

--------------------------------
------	TESTING VECTOR 24 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 502:	operator[]: 
			c c c c c c c c c c c c 
---------------------
test 503:	size: 
			12
---------------------
test 504:	capacity: 
			12
---------------------
test 505:	empty: 
			0
---------------------
test 506:	iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 			++operator: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 507:	reverse iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 508:	at: 
			c c c c c c c c c c c c vector
---------------------
test 509:	front: 
			c
---------------------
test 510:	back: 
			c

--------------------------------
------	TESTING VECTOR 25 ------
--------------------------------
		VECTOR TYPE: char

---------------------
test 511:	operator[]: 
			c c c c c c c c c c c c 
---------------------
test 512:	size: 
			12
---------------------
test 513:	capacity: 
			12
---------------------
test 514:	empty: 
			0
---------------------
test 515:	iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 			++operator: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 516:	reverse iterators: 
			operator++: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator+: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-=: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator-: c | c | c | c | c | c | c | c | c | c | c | c | 
			operator[]: c | c | c | c | c | c | c | c | c | c | c | c | 
---------------------
test 517:	at: 
			c c c c c c c c c c c c vector
---------------------
test 518:	front: 
			c
---------------------
test 519:	back: 
			c

--------------------------------
------	TESTING VECTOR 26 ------
--------------------------------
		VECTOR TYPE: std::string

---------------------
test 520:	operator[]: 
			bonjour bonjour bonjour 
---------------------
test 521:	size: 
			3
---------------------
test 522:	capacity: 
			3
---------------------
test 523:	empty: 
			0
---------------------
test 524:	iterators: 
			operator++: bonjour | bonjour | bonjour | 			++operator: bonjour | bonjour | bonjour | 
			operator+=: bonjour | bonjour | bonjour | 
			operator+: bonjour | bonjour | bonjour | 
			operator-=: bonjour | bonjour | bonjour | 
			operator-: bonjour | bonjour | bonjour | 
			operator[]: bonjour | bonjour | bonjour | 
---------------------
test 525:	reverse iterators: 
			operator++: bonjour | bonjour | bonjour | 
			operator+=: bonjour | bonjour | bonjour | 
			operator+: bonjour | bonjour | bonjour | 
			operator-=: bonjour | bonjour | bonjour | 
			operator-: bonjour | bonjour | bonjour | 
			operator[]: bonjour | bonjour | bonjour | 
---------------------
test 526:	at: 
			bonjour bonjour bonjour vector
---------------------
test 527:	front: 
			bonjour
---------------------
test 528:	back: 
			bonjour