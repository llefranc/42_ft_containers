

--------------------------------
------	TESTING VECTOR 1 ------
--------------------------------
		VECTOR TYPE: char

test 1:	operator[]: c c c c c c c c c c c c 
test 2:	size: 12
test 3:	capacity: 12
test 4:	empty: 0
test 5:	iterators: c c c c c c c c c c c c 
test 6:	at: c c c c c c c c c c c c vector
test 7:	front: c
test 8:	back: c
test 9:	push_back: new elem = c
test 10:	pop_back: new elem = c
test 11:	swap: size of tmp = 13 and size of vec = 12
			size of tmp = 12 and size of vec = 13
test 12:	resize: size of tmp = 13
			new elem = c			size of tmp after resize = 3
test 13:	assign1: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 14:	assign2: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 15:	insert1: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 16
test 16:	insert2: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 28
test 17:	insert3: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 52
test 18:	clear: size before clear: 13 | size after clear: 0new elem pushed after clear: c

--------------------------------
------	TESTING VECTOR 2 ------
--------------------------------
		VECTOR TYPE: char

test 19:	operator[]: c c c c c c c c c c c c 
test 20:	size: 12
test 21:	capacity: 12
test 22:	empty: 0
test 23:	iterators: c c c c c c c c c c c c 
test 24:	at: c c c c c c c c c c c c vector
test 25:	front: c
test 26:	back: c
test 27:	push_back: new elem = c
test 28:	pop_back: new elem = c
test 29:	swap: size of tmp = 13 and size of vec = 12
			size of tmp = 12 and size of vec = 13
test 30:	resize: size of tmp = 13
			new elem = c			size of tmp after resize = 3
test 31:	assign1: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 32:	assign2: size of tmp = 13
			new elem = c			size after assign = 3and content is:
			c | c | c | 
test 33:	insert1: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 16
test 34:	insert2: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 28
test 35:	insert3: size of tmp = 13
			c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | c | 
			size of tmp = 52
test 36:	clear: size before clear: 13 | size after clear: 0new elem pushed after clear: c

--------------------------------
------	TESTING VECTOR 3 ------
--------------------------------
		VECTOR TYPE: char

test 37:	operator[]: a 
test 38:	size: 1
test 39:	capacity: 1
test 40:	empty: 0
test 41:	iterators: a 
test 42:	at: a vector
test 43:	front: a
test 44:	back: a
test 45:	push_back: new elem = a
test 46:	pop_back: new elem = a
test 47:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 48:	resize: size of tmp = 2
			new elem = a			size of tmp after resize = 3
test 49:	assign1: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 50:	assign2: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 51:	insert1: size of tmp = 2
			a | a | a | a | a | 
			size of tmp = 5
test 52:	insert2: size of tmp = 2
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 17
test 53:	insert3: size of tmp = 2
			a | a | a | a | a | a | a | a | 
			size of tmp = 8
test 54:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: a

--------------------------------
------	TESTING VECTOR 4 ------
--------------------------------
		VECTOR TYPE: char

test 55:	operator[]: a 
test 56:	size: 1
test 57:	capacity: 1
test 58:	empty: 0
test 59:	iterators: a 
test 60:	at: a vector
test 61:	front: a
test 62:	back: a
test 63:	push_back: new elem = a
test 64:	pop_back: new elem = a
test 65:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 66:	resize: size of tmp = 2
			new elem = a			size of tmp after resize = 3
test 67:	assign1: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 68:	assign2: size of tmp = 2
			new elem = a			size after assign = 3and content is:
			a | a | a | 
test 69:	insert1: size of tmp = 2
			a | a | a | a | a | 
			size of tmp = 5
test 70:	insert2: size of tmp = 2
			a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | a | 
			size of tmp = 17
test 71:	insert3: size of tmp = 2
			a | a | a | a | a | a | a | a | 
			size of tmp = 8
test 72:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: a

--------------------------------
------	TESTING VECTOR 5 ------
--------------------------------
		VECTOR TYPE: int

test 73:	operator[]: 100 100 100 100 100 
test 74:	size: 5
test 75:	capacity: 5
test 76:	empty: 0
test 77:	iterators: 100 100 100 100 100 
test 78:	at: 100 100 100 100 100 vector
test 79:	front: 100
test 80:	back: 100
test 81:	push_back: new elem = 100
test 82:	pop_back: new elem = 100
test 83:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 84:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 85:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 86:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 87:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 88:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 89:	insert3: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 24
test 90:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 6 ------
--------------------------------
		VECTOR TYPE: int

test 91:	operator[]: 
test 92:	size: 0
test 93:	capacity: 0
test 94:	empty: 1
test 95:	iterators: 
test 96:	at: vector
test 97:	front: 
test 98:	back: 
test 99:	push_back: new elem = 0
test 100:	pop_back: 
test 101:	swap: size of tmp = 1 and size of vec = 0
			size of tmp = 0 and size of vec = 1
test 102:	resize: size of tmp = 1
			new elem = 0			size of tmp after resize = 3
test 103:	assign1: size of tmp = 1
			new elem = 0			size after assign = 3and content is:
			0 | 0 | 0 | 
test 104:	assign2: size of tmp = 1
			new elem = 0			size after assign = 3and content is:
			0 | 0 | 0 | 
test 105:	insert1: size of tmp = 1
			0 | 0 | 0 | 0 | 
			size of tmp = 4
test 106:	insert2: size of tmp = 1
			0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 
			size of tmp = 16
test 107:	insert3: size of tmp = 1
			0 | 0 | 0 | 0 | 
			size of tmp = 4
test 108:	clear: size before clear: 1 | size after clear: 0new elem pushed after clear: 0

--------------------------------
------	TESTING VECTOR 7 ------
--------------------------------
		VECTOR TYPE: int

test 109:	operator[]: 89123891 
test 110:	size: 1
test 111:	capacity: 1
test 112:	empty: 0
test 113:	iterators: 89123891 
test 114:	at: 89123891 vector
test 115:	front: 89123891
test 116:	back: 89123891
test 117:	push_back: new elem = 89123891
test 118:	pop_back: new elem = 89123891
test 119:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 120:	resize: size of tmp = 2
			new elem = 89123891			size of tmp after resize = 3
test 121:	assign1: size of tmp = 2
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
test 122:	assign2: size of tmp = 2
			new elem = 89123891			size after assign = 3and content is:
			89123891 | 89123891 | 89123891 | 
test 123:	insert1: size of tmp = 2
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 5
test 124:	insert2: size of tmp = 2
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 17
test 125:	insert3: size of tmp = 2
			89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 89123891 | 
			size of tmp = 8
test 126:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 89123891

--------------------------------
------	TESTING VECTOR 8 ------
--------------------------------
		VECTOR TYPE: int

test 127:	operator[]: 100 100 100 100 100 
test 128:	size: 5
test 129:	capacity: 5
test 130:	empty: 0
test 131:	iterators: 100 100 100 100 100 
test 132:	at: 100 100 100 100 100 vector
test 133:	front: 100
test 134:	back: 100
test 135:	push_back: new elem = 100
test 136:	pop_back: new elem = 100
test 137:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 138:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 139:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 140:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 141:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 142:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 143:	insert3: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 24
test 144:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 9 ------
--------------------------------
		VECTOR TYPE: int

test 145:	operator[]: 100 100 100 100 100 
test 146:	size: 5
test 147:	capacity: 5
test 148:	empty: 0
test 149:	iterators: 100 100 100 100 100 
test 150:	at: 100 100 100 100 100 vector
test 151:	front: 100
test 152:	back: 100
test 153:	push_back: new elem = 100
test 154:	pop_back: new elem = 100
test 155:	swap: size of tmp = 6 and size of vec = 5
			size of tmp = 5 and size of vec = 6
test 156:	resize: size of tmp = 6
			new elem = 100			size of tmp after resize = 3
test 157:	assign1: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 158:	assign2: size of tmp = 6
			new elem = 100			size after assign = 3and content is:
			100 | 100 | 100 | 
test 159:	insert1: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 9
test 160:	insert2: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 21
test 161:	insert3: size of tmp = 6
			100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 100 | 
			size of tmp = 24
test 162:	clear: size before clear: 6 | size after clear: 0new elem pushed after clear: 100

--------------------------------
------	TESTING VECTOR 10 ------
--------------------------------
		VECTOR TYPE: double*

test 163:	operator[]: 
test 164:	size: 0
test 165:	capacity: 0
test 166:	empty: 1
test 167:	iterators: 
test 168:	at: vector
test 169:	front: 
test 170:	back: 
test 171:	push_back: new elem = 0x0
test 172:	pop_back: 
test 173:	swap: size of tmp = 1 and size of vec = 0
			size of tmp = 0 and size of vec = 1
test 174:	resize: size of tmp = 1
			new elem = 0x0			size of tmp after resize = 3
test 175:	assign1: size of tmp = 1
			new elem = 0x0			size after assign = 3and content is:
			0x0 | 0x0 | 0x0 | 
test 176:	assign2: size of tmp = 1
			new elem = 0x0			size after assign = 3and content is:
			0x0 | 0x0 | 0x0 | 
test 177:	insert1: size of tmp = 1
			0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 4
test 178:	insert2: size of tmp = 1
			0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 16
test 179:	insert3: size of tmp = 1
			0x0 | 0x0 | 0x0 | 0x0 | 
			size of tmp = 4
test 180:	clear: size before clear: 1 | size after clear: 0new elem pushed after clear: 0x0

--------------------------------
------	TESTING VECTOR 11 ------
--------------------------------
		VECTOR TYPE: double*

test 181:	operator[]: 0x7ffee841fae0 
test 182:	size: 1
test 183:	capacity: 1
test 184:	empty: 0
test 185:	iterators: 0x7ffee841fae0 
test 186:	at: 0x7ffee841fae0 vector
test 187:	front: 0x7ffee841fae0
test 188:	back: 0x7ffee841fae0
test 189:	push_back: new elem = 0x7ffee841fae0
test 190:	pop_back: new elem = 0x7ffee841fae0
test 191:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 192:	resize: size of tmp = 2
			new elem = 0x7ffee841fae0			size of tmp after resize = 3
test 193:	assign1: size of tmp = 2
			new elem = 0x7ffee841fae0			size after assign = 3and content is:
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
test 194:	assign2: size of tmp = 2
			new elem = 0x7ffee841fae0			size after assign = 3and content is:
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
test 195:	insert1: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 5
test 196:	insert2: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 17
test 197:	insert3: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 8
test 198:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 0x7ffee841fae0

--------------------------------
------	TESTING VECTOR 12 ------
--------------------------------
		VECTOR TYPE: double*

test 199:	operator[]: 0x7ffee841fae0 
test 200:	size: 1
test 201:	capacity: 1
test 202:	empty: 0
test 203:	iterators: 0x7ffee841fae0 
test 204:	at: 0x7ffee841fae0 vector
test 205:	front: 0x7ffee841fae0
test 206:	back: 0x7ffee841fae0
test 207:	push_back: new elem = 0x7ffee841fae0
test 208:	pop_back: new elem = 0x7ffee841fae0
test 209:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 210:	resize: size of tmp = 2
			new elem = 0x7ffee841fae0			size of tmp after resize = 3
test 211:	assign1: size of tmp = 2
			new elem = 0x7ffee841fae0			size after assign = 3and content is:
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
test 212:	assign2: size of tmp = 2
			new elem = 0x7ffee841fae0			size after assign = 3and content is:
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
test 213:	insert1: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 5
test 214:	insert2: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 17
test 215:	insert3: size of tmp = 2
			0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 0x7ffee841fae0 | 
			size of tmp = 8
test 216:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: 0x7ffee841fae0

--------------------------------
------	TESTING VECTOR 13 ------
--------------------------------
		VECTOR TYPE: std::string

test 217:	operator[]: salut salut salut salut salut salut 
test 218:	size: 6
test 219:	capacity: 6
test 220:	empty: 0
test 221:	iterators: salut salut salut salut salut salut 
test 222:	at: salut salut salut salut salut salut vector
test 223:	front: salut
test 224:	back: salut
test 225:	push_back: new elem = salut
test 226:	pop_back: new elem = salut
test 227:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 228:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 229:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 230:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 231:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 232:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 233:	insert3: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 28
test 234:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 14 ------
--------------------------------
		VECTOR TYPE: std::string

test 235:	operator[]: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj 
test 236:	size: 6
test 237:	capacity: 6
test 238:	empty: 0
test 239:	iterators: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj 
test 240:	at: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf salut salut salut salut jbhkfbhsj vector
test 241:	front: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
test 242:	back: jbhkfbhsj
test 243:	push_back: new elem = jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf
test 244:	pop_back: new elem = jbhkfbhsj
test 245:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 246:	resize: size of tmp = 7
			new elem = jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf			size of tmp after resize = 3
test 247:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | 
test 248:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
test 249:	insert1: size of tmp = 7
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 10
test 250:	insert2: size of tmp = 7
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 22
test 251:	insert3: size of tmp = 7
			jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | salut | salut | salut | salut | jbhkfbhsj | jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf | 
			size of tmp = 28
test 252:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: jbhkfbhsjdhfbhsdkjfbjksdbkhfsdf

--------------------------------
------	TESTING VECTOR 15 ------
--------------------------------
		VECTOR TYPE: std::string

test 253:	operator[]:     
test 254:	size: 4
test 255:	capacity: 4
test 256:	empty: 0
test 257:	iterators:     
test 258:	at:     vector
test 259:	front: 
test 260:	back: 
test 261:	push_back: new elem = 
test 262:	pop_back: new elem = 
test 263:	swap: size of tmp = 5 and size of vec = 4
			size of tmp = 4 and size of vec = 5
test 264:	resize: size of tmp = 5
			new elem = 			size of tmp after resize = 3
test 265:	assign1: size of tmp = 5
			new elem = 			size after assign = 3and content is:
			 |  |  | 
test 266:	assign2: size of tmp = 5
			new elem = 			size after assign = 3and content is:
			 |  |  | 
test 267:	insert1: size of tmp = 5
			 |  |  |  |  |  |  |  | 
			size of tmp = 8
test 268:	insert2: size of tmp = 5
			 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | 
			size of tmp = 20
test 269:	insert3: size of tmp = 5
			 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | 
			size of tmp = 20
test 270:	clear: size before clear: 5 | size after clear: 0new elem pushed after clear: 

--------------------------------
------	TESTING VECTOR 16 ------
--------------------------------
		VECTOR TYPE: std::string

test 271:	operator[]: salut salut salut salut salut salut 
test 272:	size: 6
test 273:	capacity: 6
test 274:	empty: 0
test 275:	iterators: salut salut salut salut salut salut 
test 276:	at: salut salut salut salut salut salut vector
test 277:	front: salut
test 278:	back: salut
test 279:	push_back: new elem = salut
test 280:	pop_back: new elem = salut
test 281:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 282:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 283:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 284:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 285:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 286:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 287:	insert3: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 28
test 288:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 17 ------
--------------------------------
		VECTOR TYPE: std::string

test 289:	operator[]: salut salut salut salut salut salut 
test 290:	size: 6
test 291:	capacity: 6
test 292:	empty: 0
test 293:	iterators: salut salut salut salut salut salut 
test 294:	at: salut salut salut salut salut salut vector
test 295:	front: salut
test 296:	back: salut
test 297:	push_back: new elem = salut
test 298:	pop_back: new elem = salut
test 299:	swap: size of tmp = 7 and size of vec = 6
			size of tmp = 6 and size of vec = 7
test 300:	resize: size of tmp = 7
			new elem = salut			size of tmp after resize = 3
test 301:	assign1: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 302:	assign2: size of tmp = 7
			new elem = salut			size after assign = 3and content is:
			salut | salut | salut | 
test 303:	insert1: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 10
test 304:	insert2: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 22
test 305:	insert3: size of tmp = 7
			salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | salut | 
			size of tmp = 28
test 306:	clear: size before clear: 7 | size after clear: 0new elem pushed after clear: salut

--------------------------------
------	TESTING VECTOR 18 ------
--------------------------------
		VECTOR TYPE: Class test

test 307:	operator[]: Class test printing Class test printing 
test 308:	size: 2
test 309:	capacity: 2
test 310:	empty: 0
test 311:	iterators: Class test printing Class test printing 
test 312:	at: Class test printing Class test printing vector
test 313:	front: Class test printing
test 314:	back: Class test printing
test 315:	push_back: new elem = Class test printing
test 316:	pop_back: new elem = Class test printing
test 317:	swap: size of tmp = 3 and size of vec = 2
			size of tmp = 2 and size of vec = 3
test 318:	resize: size of tmp = 3
			new elem = Class test printing			size of tmp after resize = 3
test 319:	assign1: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 320:	assign2: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 321:	insert1: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 6
test 322:	insert2: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 18
test 323:	insert3: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 12
test 324:	clear: size before clear: 3 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 19 ------
--------------------------------
		VECTOR TYPE: Class test

test 325:	operator[]: Class test printing Class test printing 
test 326:	size: 2
test 327:	capacity: 2
test 328:	empty: 0
test 329:	iterators: Class test printing Class test printing 
test 330:	at: Class test printing Class test printing vector
test 331:	front: Class test printing
test 332:	back: Class test printing
test 333:	push_back: new elem = Class test printing
test 334:	pop_back: new elem = Class test printing
test 335:	swap: size of tmp = 3 and size of vec = 2
			size of tmp = 2 and size of vec = 3
test 336:	resize: size of tmp = 3
			new elem = Class test printing			size of tmp after resize = 3
test 337:	assign1: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 338:	assign2: size of tmp = 3
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 339:	insert1: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 6
test 340:	insert2: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 18
test 341:	insert3: size of tmp = 3
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 12
test 342:	clear: size before clear: 3 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 20 ------
--------------------------------
		VECTOR TYPE: Class test

test 343:	operator[]: Class test printing 
test 344:	size: 1
test 345:	capacity: 1
test 346:	empty: 0
test 347:	iterators: Class test printing 
test 348:	at: Class test printing vector
test 349:	front: Class test printing
test 350:	back: Class test printing
test 351:	push_back: new elem = Class test printing
test 352:	pop_back: new elem = Class test printing
test 353:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 354:	resize: size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
test 355:	assign1: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 356:	assign2: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 357:	insert1: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
test 358:	insert2: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
test 359:	insert3: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 8
test 360:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 21 ------
--------------------------------
		VECTOR TYPE: Class test

test 361:	operator[]: Class test printing 
test 362:	size: 1
test 363:	capacity: 1
test 364:	empty: 0
test 365:	iterators: Class test printing 
test 366:	at: Class test printing vector
test 367:	front: Class test printing
test 368:	back: Class test printing
test 369:	push_back: new elem = Class test printing
test 370:	pop_back: new elem = Class test printing
test 371:	swap: size of tmp = 2 and size of vec = 1
			size of tmp = 1 and size of vec = 2
test 372:	resize: size of tmp = 2
			new elem = Class test printing			size of tmp after resize = 3
test 373:	assign1: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 374:	assign2: size of tmp = 2
			new elem = Class test printing			size after assign = 3and content is:
			Class test printing | Class test printing | Class test printing | 
test 375:	insert1: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 5
test 376:	insert2: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 17
test 377:	insert3: size of tmp = 2
			Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | Class test printing | 
			size of tmp = 8
test 378:	clear: size before clear: 2 | size after clear: 0new elem pushed after clear: Class test printing

--------------------------------
------	TESTING VECTOR 22 ------
--------------------------------
		VECTOR TYPE: int

test 379:	operator[]: 100 100 100 100 100 
test 380:	size: 5
test 381:	capacity: 5
test 382:	empty: 0
test 383:	iterators: 100 100 100 100 100 
test 384:	at: 100 100 100 100 100 vector
test 385:	front: 100
test 386:	back: 100

--------------------------------
------	TESTING VECTOR 23 ------
--------------------------------
		VECTOR TYPE: int

test 387:	operator[]: 
test 388:	size: 0
test 389:	capacity: 0
test 390:	empty: 1
test 391:	iterators: 
test 392:	at: vector
test 393:	front: 
test 394:	back: 

--------------------------------
------	TESTING VECTOR 24 ------
--------------------------------
		VECTOR TYPE: char

test 395:	operator[]: c c c c c c c c c c c c 
test 396:	size: 12
test 397:	capacity: 12
test 398:	empty: 0
test 399:	iterators: c c c c c c c c c c c c 
test 400:	at: c c c c c c c c c c c c vector
test 401:	front: c
test 402:	back: c

--------------------------------
------	TESTING VECTOR 25 ------
--------------------------------
		VECTOR TYPE: char

test 403:	operator[]: c c c c c c c c c c c c 
test 404:	size: 12
test 405:	capacity: 12
test 406:	empty: 0
test 407:	iterators: c c c c c c c c c c c c 
test 408:	at: c c c c c c c c c c c c vector
test 409:	front: c
test 410:	back: c

--------------------------------
------	TESTING VECTOR 26 ------
--------------------------------
		VECTOR TYPE: std::string

test 411:	operator[]: bonjour bonjour bonjour 
test 412:	size: 3
test 413:	capacity: 3
test 414:	empty: 0
test 415:	iterators: bonjour bonjour bonjour 
test 416:	at: bonjour bonjour bonjour vector
test 417:	front: bonjour
test 418:	back: bonjour